[[_git_powershell]]
=== Git в PowerShell

(((PowerShell)))(((tab completion, PowerShell)))(((shell prompts, PowerShell)))
(((posh-git)))
Стандартният команден терминал в Windows (`cmd.exe`) не е особено подходящ за комфортна работа с Git, но ако използвате PowerShell, тогава нещата са други.
Това също работи ако използвате PowerShell Core на друга платформа, например Linux или macOS.
Пакетът posh-git (https://github.com/dahlbyk/posh-git[^]) осигурява мощна tab-completion функционалност, както и подобрен промпт за вашите хранилища.
Изглежда така:

.PowerShell с Posh-git
image::images/posh-git.png[PowerShell с Posh-git]

==== Инсталация

===== Изисквания (само за Windows)

Преди да можете да изпълнявате PowerShell скриптове, трябва да настроите вашата локална `ExecutionPolicy` на `RemoteSigned` (всичко с изключение на `Undefined` и `Restricted`). 
Ако изберете `AllSigned` вместо `RemoteSigned`, също и локалните скриптове (вашите собствени) трябва да бъдат цифрово подписани, за да могат да бъдат изпълнявани. 
С `RemoteSigned`, само скриптовете със `ZoneIdentifier` настроен на `Internet` (тоест, изтеглени от мрежата) е необходимо да са подписани, другите не.
Ако сте администратор и искате да го зададете за всички потребители, използвайте `-Scope LocalMachine`.
Ако сте нормален потребител без административни права, използвайте `-Scope CurrentUser` за да зададете настройката само за вас.

Повече за PowerShell Scopes: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes[^].

Повече за PowerShell ExecutionPolicy: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.security/set-executionpolicy[^].

За да зададете стойност `RemoteSigned` на `ExecutionPolicy` за всички потребители, използвайте командата:

[source,powershell]
----
> Set-ExecutionPolicy -Scope LocalMachine -ExecutionPolicy RemoteSigned -Force
----

===== PowerShell Gallery

Ако имате поне PowerShell 5 или PowerShell 4 с PackageManagement, можете да използвате пакетния мениджър за да издърпате posh-git.

Повече информация за PowerShell Gallery: https://docs.microsoft.com/en-us/powershell/scripting/gallery/overview[^].

[source,powershell]
----
> Install-Module posh-git -Scope CurrentUser -Force
> Install-Module posh-git -Scope CurrentUser -AllowPrerelease -Force # Newer beta version with PowerShell Core support
----

Ако искате да инсталирате posh-git за всички потребители, подайте `-Scope AllUsers` вместо това и изпълнете командата от elevated PowerShell конзола.
Ако втората команда завърши с грешка от рода на `Module 'PowerShellGet' was not installed by using Install-Module`, ще трябва първо да изпълните друга такава:

[source,powershell]
----
> Install-Module PowerShellGet -Force -SkipPublisherCheck
----

След това може да се върнете и да опитате отново.
Това се случва, защото модулите, които идват с Windows Powershell са подписани с различни сертификати.

===== Обновяване на PowerShell промпта

За да включите Git информация в промпта, posh-git модулът трябва да бъде импортиран. 
За да се импортира posh-git всеки път, когато се пусне PowerShell, изпълнете командата `Add-PoshGitToProfile`, която ще добави импортиращия израз във вашия `$profile` скрипт.
Той се изпълнява всеки път, когато отворите нов PowerShell промпт.
Не забравяйте, че има няколко `$profile` скриптове. 
Например един за конзолата и друг отделен за ISE.

[source,powershell]
----
> Import-Module posh-git
> Add-PoshGitToProfile -AllHosts
----

===== От изходен код

Просто изтеглете posh-git версия от https://github.com/dahlbyk/posh-git/releases[^], и я разархивирайте.
След това импортирайте модула използвайки пълния път до `файла posh-git.psd1`:

[source,powershell]
----
> Import-Module <path-to-uncompress-folder>\src\posh-git.psd1
> Add-PoshGitToProfile -AllHosts
----

Това ще добави правилния ред във файла `profile.ps1` и posh-git ще е активен следващия път, когато отворите вашия промпт.

За описание на Git status summary информацията, която се вижда в промпта, погледнете: https://github.com/dahlbyk/posh-git/blob/master/README.md#git-status-summary-information[^]
За повече подробности как да настроите вашия posh-git промпт, вижте: https://github.com/dahlbyk/posh-git/blob/master/README.md#customization-variables[^].
